demo()
graphics
graphics()
base.graphics()
add2<-function(x,y) {
x+y
}
add2(2,5)
?mean()
mean(c(1,2,3,4,5))
mean(c(1,2,3,4,5,6,7,7,8,1,2,3,4))
?solve()
a<-matrix(c(1,2,3,4,-5,-6,5,3,2),nrow=3,ncol=3)
a
cacheSolve(a)
cachematrix(a)
setwd("D:/M B Kadri/Teaching Courses/Coursera/Specialization/R Programming/Assignment 2/ProgrammingAssignment2")
cacheSolve(a)
cachematrix(a)
add2
add2
source('D:/M B Kadri/Teaching Courses/Coursera/Specialization/R Programming/Assignment 1/add2.R')
add2
source('D:/M B Kadri/Teaching Courses/Coursera/Specialization/R Programming/Assignment 2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(a)
source('D:/M B Kadri/Teaching Courses/Coursera/Specialization/R Programming/Assignment 2/ProgrammingAssignment2/CalcMean.R')
cachemean(c(1,2,3,4))
makeVector(c(1,2,3,4))
cachemean()
cachemean(c(1,2,3,4))
makeVector()
cachemean(c(1,2,3,4))
vec<-makeVector(1:10)
vec<-makeVector(1:10)
source('D:/M B Kadri/Teaching Courses/Coursera/Specialization/R Programming/Assignment 2/ProgrammingAssignment2/CalcMean.R')
vec<-makeVector(1:10)
cachemean(vec)
cachemean(vec)
cachemean(vec)
source('D:/M B Kadri/Teaching Courses/Coursera/Specialization/R Programming/Assignment 2/ProgrammingAssignment2/cachematrix.R')
m<-makeCacheMatrix(matrix(1:4,2,2))
cacheSOlve(m)
cacheSolve(m)
cacheSolve(m)
m<-makeCacheMatrix(matrix(1:100,10,10))
cacheSolve(m)
m<-makeCacheMatrix(matrix(1:100,10,10))
m<-is.singular.matrix(matrix(1:100,10,10))
?is.singular.matrix
??is.singular.matrix
m<-svd(matrix(1:100,10,10))
m
m<-svd(matrix(1:4,2,2))
m
m<-svd(matrix(1:9,3,3))
m
m<-solve(matrix(1:9,3,3))
?svd
m<-svd(matrix(1:9,3,3))
m$d
m$d[>0]
m$d[d>0]
m$d[m$d>0]
m$d[m$d<0]
m$d[m$d==0]
